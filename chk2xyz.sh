#!/bin/bash
for file in "$@"
do
	echo		"Extracting from $file"
### Working around copychk's bug
	cp			"$file" "./TMP_$$.chk"
	~/g09/newzmat -ichk -ozmat -noround "./TMP_$$.chk" "./TMP_$$.gjf"
	rm			"./TMP_$$.chk"
	NEWFILE=$(echo "$file" | gawk '{print gensub("[^/]+/([^/]+).chk$","\\1","G");}')

	echo $NEWFILE
### Working around copychk's bug
	case $TEMPLATE in
	"FRAGMENT_SCRF")
		cat << -------------------------- > $NEWFILE
# m062x aug-cc-pvtz Integral(Grid=UltraFine) scrf(SMD,Solvent=Acetonitrile) scf(NoIncFock,NoVarAcc,MaxCycle=64) int=acc2e=12

Generated by Ming's script with template option:	"$TEMPLATE"

--------------------------
		read	STRING
		gawk	'BEGIN{
				atomcount=0;
				if(	split("'"$STRING"'",tmp0,/\/+/)	==	2	){
					if(	split(tmp0[1],tmp,/[,[:blank:]]+/)	==	2	)
						print	tmp[1]" "tmp[2];
					else{
						print	"ERROR:	Charge and Spin not found.";
						exit;
					}
					if(	split(tmp0[2],tmp,/[,[:blank:]]+/)	>	0	){
						for(	i	in	tmp	){
							if(	""strtonum(tmp[i])	==	tmp[i]	)
								fragments[	tmp[i]*1	]	=	"";
							else{
								print	"ERROR:	Unkown atom index:	"tmp[i];
								exit;
							}
						}
					}
					else{
						print	"ERROR:	Fragment atom list not found.";
						exit;
					}
				}
				else{
					print	"ERROR:	Charge, Spin, and Fragment atom list not found.";
					print	"Usage:	\"Charge, Spin,/atom1, atom2, atom3, atom4, atom5, ...\"";
					exit;
				}
			}
			/^\s*[A-Z][a-z]?(\s+-?[0-9\.]+)+/{
				atomcount++;
				if(	atomcount	in	fragments	)
					print	$1"     "$2"     "$3"     "$4;
				next;
			}' "./TMP_$$.gjf" >> $NEWFILE
		printf	"\n\n\n\n" >> $NEWFILE
		rm			"./TMP_$$.gjf"
		;;
	"XYZ")
		gawk	'BEGIN{
				atomcount=0;
				PROCINFO["sorted_in"]="@ind_num_asc";
			}
			/^\s*[A-Z][a-z]?(\(\S+\))?(\s+-?[0-9\.]+)+/{
				FILE[	++atomcount	]	=	$1"     "$2"     "$3"     "$4;
			}
			END{
				#print	"'"$NEWFILE"'";
				print	atomcount;
				print	"Generated by Ming'"\'"'s script with template option:	'$TEMPLATE'";
				for(	line	in	FILE	)
					print	FILE[line];
			}' "./TMP_$$.gjf"	>	"$NEWFILE.xyz"
		rm	"./TMP_$$.gjf"
		;;
	esac
done

